{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","target","value","onBlur","updateStatus","ProfileInfo","profile","className","s","description__block","src","photos","large","alt","description","aboutMe","Preloader","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","action","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","React","memo","postsElements","posts","reverse","map","p","posts__block","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorisedUserId","history","push","getUserProfile","getStatus","Component","mapDispatchToProps","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.fc84f4f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"picture\":\"ProfileInfo_picture__2GpIx\",\"description__block\":\"ProfileInfo_description__block__3aa0y\",\"status\":\"ProfileInfo_status__bMbBB\",\"description\":\"ProfileInfo_description__2Vkts\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts__block\":\"MyPosts_posts__block__1cU1C\",\"posts\":\"MyPosts_posts__1hull\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__13kW5\"};","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false); // деструктурированное присваивание\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    \r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"Клик-клик\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus onChange={onStatusChange} onBlur={deactivateEditMode} value={status} /> {/* status из useState */}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.scss';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.description__block}>\r\n                <img src={profile.photos.large} alt=\"\" />\r\n                <div className={s.status}>\r\n                    <p>Статус:</p>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n                </div>\r\n                <div className={s.description}>\r\n                    <p>{profile.aboutMe}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.scss';\r\n\r\nconst Post = (props) => {\r\n\r\n    // console.log(props.message);\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://www.meme-arsenal.com/memes/7bdea6754f999b50e9577596f09197fb.jpg\" alt=\"\" />\r\n            {props.message}\r\n            <div>\r\n                <button>like</button> <span>{props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport s from './MyPosts.module.scss';\r\nimport Post from './Post/Post';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../Common/FormsControls/FormsControls';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form action=\"\" onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newPostText\"} placeholder={\"Let's post something\"}\r\n                       validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post\r\n                message={p.message}\r\n                likesCount={p.likesCount} />)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.posts__block}>\r\n            <h3>My Posts</h3>\r\n            <div>\r\n                <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\n// import { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorisedUserId; // or 6581\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId); // thunk\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nlet mapDispatchToProps = {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}