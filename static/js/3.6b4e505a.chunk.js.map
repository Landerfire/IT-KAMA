{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.scss","assets/images/vk.svg","assets/images/facebook.svg","assets/images/github.svg","assets/images/instagram.svg","assets/images/twitter.svg","assets/images/youtube.svg","assets/images/website.png","assets/images/mainlink.png","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","target","value","onBlur","updateStatus","ProfileDataReduxForm","reduxForm","form","profile","handleSubmit","error","onSubmit","className","style","formSummaryError","createField","required","Input","s","userJob","type","userProfessionalSkills","Textarea","description","contacts","Object","keys","map","key","contact","ProfileData","isOwner","goToEditMode","descriptionBlock","onClick","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileContacts","contactsInfoBlock","contactId","iconName","contactTitle","contactValue","Contact","id","href","rel","icon","iconPath","title","contactIcon","src","alt","facebook","website","vk","twitter","instagram","youtube","github","mainlink","iconSort","ProfileInfo","savePhoto","saveProfile","Preloader","profileInfoBlock","mainInfoBlock","userName","fullName","profilePhotoBlock","photos","large","userPhoto","mainPhoto","files","length","initialValues","formData","then","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","action","Field","component","name","placeholder","validate","MyPosts","React","memo","postsElements","posts","reverse","p","posts__block","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorisedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","mapDispatchToProps","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.6b4e505a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoBlock\":\"ProfileInfo_profileInfoBlock__34I5W\",\"mainInfoBlock\":\"ProfileInfo_mainInfoBlock__1Js2w\",\"userName\":\"ProfileInfo_userName__1yyA7\",\"status\":\"ProfileInfo_status__bMbBB\",\"profilePhotoBlock\":\"ProfileInfo_profilePhotoBlock__20TPo\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1TIuq\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__5jV-u\",\"description\":\"ProfileInfo_description__2Vkts\",\"contactsInfoBlock\":\"ProfileInfo_contactsInfoBlock__1PPT_\",\"contacts\":\"ProfileInfo_contacts__3Jyr4\",\"contact\":\"ProfileInfo_contact__28xzs\",\"contactIcon\":\"ProfileInfo_contactIcon__3enMH\"};","module.exports = __webpack_public_path__ + \"static/media/vk.d13c963d.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.012e983c.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.ce89173e.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.9f41e00c.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.2881f962.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube.ee528d4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/website.7157cefe.png\";","module.exports = __webpack_public_path__ + \"static/media/mainlink.348d543c.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts__block\":\"MyPosts_posts__block__1cU1C\",\"posts\":\"MyPosts_posts__1hull\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__13kW5\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false); // деструктурированное присваивание\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"Клик-клик\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus onChange={onStatusChange} onBlur={deactivateEditMode} value={status} /> {/* status из useState */}\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from \"./ProfileInfo.module.scss\";\r\nimport {createField, Input, Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport style from \"../../Common/FormsControls/FormsControls.module.scss\";\r\n\r\nconst ProfileDataForm = ({profile, handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <button>Save</button>\r\n            </div>\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n\r\n            <div>\r\n                <b>Full Name</b>: {createField(\"Full name\", \"fullName\", [required], Input )}\r\n            </div>\r\n            <div className={s.userJob}>\r\n                <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            </div>\r\n\r\n            <div className={s.userProfessionalSkills}>\r\n                <b>My professional skills</b>: {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n\r\n            <div className={s.description}>\r\n                <b>About Me</b>: {createField(\"About Me\", \"aboutMe\", [], Input)}\r\n            </div>\r\n\r\n            <div className={s.contacts}>\r\n                {Object.keys(profile.contacts).map(key => {\r\n                    return <div key={key} className={s.contact}>\r\n                        <b>{key}</b>: {createField(key, \"contacts.\" + key, [], Input )}\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.scss';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport vk from '../../../assets/images/vk.svg';\r\nimport facebook from '../../../assets/images/facebook.svg';\r\nimport github from '../../../assets/images/github.svg';\r\nimport instagram from '../../../assets/images/instagram.svg';\r\nimport twitter from '../../../assets/images/twitter.svg';\r\nimport youtube from '../../../assets/images/youtube.svg';\r\nimport website from '../../../assets/images/website.png';\r\nimport mainlink from '../../../assets/images/mainlink.png';\r\n\r\nconst ProfileInfo = ({isOwner, profile, status, updateStatus, savePhoto, saveProfile}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        const promise = saveProfile(formData);\r\n        promise.then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfoBlock}>\r\n            <div className={s.mainInfoBlock}>\r\n                <div className={s.userName}>\r\n                    {profile.fullName}\r\n                </div>\r\n                <div className={s.status}>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.profilePhotoBlock}>\r\n                <img src={profile.photos.large || userPhoto} alt={\"Низагружаица\"} className={s.mainPhoto} />\r\n                <div>\r\n                    {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n                </div>\r\n            </div>\r\n\r\n            {editMode\r\n                ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => {\r\n                    setEditMode(true)\r\n                }} />}\r\n\r\n            <ProfileContacts profile={profile} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div className={s.descriptionBlock}>\r\n        {isOwner &&\r\n        <div>\r\n            <button onClick={goToEditMode}>Edit</button>\r\n        </div>}\r\n        <div className={s.userJob}>\r\n            <b>Looking for a job</b>:\r\n            <p>{profile.lookingForAJob ? \"Yes\" : \"Nope\"}</p>\r\n        </div>\r\n\r\n        {profile.lookingForAJob &&\r\n        <div className={s.userProfessionalSkills}>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n\r\n        <div className={s.description}>\r\n            <b>About Me</b>: {profile.aboutMe}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst ProfileContacts = ({profile}) => {\r\n    return <div className={s.contactsInfoBlock}>\r\n        <p><b>Contacts</b>:</p>\r\n        <div className={s.contacts}>\r\n            {Object.keys(profile.contacts).map(key => {\r\n                return <Contact contactId={key} iconName={key} key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst iconSort = (iconName) => {\r\n    const icon = (iconPath, iconName, title) => {\r\n        return <img className={s.contactIcon} src={iconPath} alt={iconName} title={title} />\r\n    }\r\n    switch (iconName) {\r\n        case \"facebook\": {\r\n            let [title, iconPath] = [\"facebook.com\", facebook];\r\n            return icon(iconPath, iconName, title);\r\n        }\r\n        case \"website\": {\r\n            let [title, iconPath] = [\"My website\", website];\r\n            return icon(iconPath, iconName, title);\r\n        }\r\n        case \"vk\": {\r\n            let [title, iconPath] = [\"vk.com\", vk];\r\n            return icon(iconPath, iconName, title);\r\n        }\r\n        case \"twitter\": {\r\n            let [title, iconPath] = [\"twitter.com\", twitter];\r\n            return icon(iconPath, iconName, title);\r\n        }\r\n        case \"instagram\": {\r\n            let [title, iconPath] = [\"instagram.com\", instagram];\r\n            return icon(iconPath, iconName, title);\r\n        }\r\n        case \"youtube\": {\r\n            let [title, iconPath] = [\"youtube.com\", youtube];\r\n            return icon(iconPath, iconName, title);\r\n        }\r\n        case \"github\": {\r\n            let [title, iconPath] = [\"github.com\", github];\r\n            return icon(iconPath, iconName, title);\r\n        }\r\n        case \"mainLink\": {\r\n            let [title, iconPath] = [\"Main Link\", mainlink];\r\n            return icon(iconPath, iconName, title);\r\n        }\r\n        default: {\r\n            return undefined\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue, contactId, iconName}) => {\r\n    return <div>\r\n        {contactValue &&\r\n        <a className={s.contact} id={contactId} href={contactValue} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {/*{contactTitle}*/}\r\n            {iconSort(iconName)}\r\n        </a>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.scss';\r\n\r\nconst Post = (props) => {\r\n\r\n    // console.log(props.message);\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://www.meme-arsenal.com/memes/7bdea6754f999b50e9577596f09197fb.jpg\" alt=\"\" />\r\n            {props.message}\r\n            <div>\r\n                <button>like</button> <span>{props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport s from './MyPosts.module.scss';\r\nimport Post from './Post/Post';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../Common/FormsControls/FormsControls';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form action=\"\" onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newPostText\"} placeholder={\"Let's post something\"}\r\n                       validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post\r\n                key={p.id}\r\n                message={p.message}\r\n                likesCount={p.likesCount} />)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.posts__block}>\r\n            <h3>My Posts</h3>\r\n            <div>\r\n                <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner} profile={props.profile} status={props.status}\r\n                         updateStatus={props.updateStatus} savePhoto={props.savePhoto} saveProfile={props.saveProfile} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\n// import { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorisedUserId; // or 6581\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId); // thunk\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     savePhoto={this.props.savePhoto}\r\n                     updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nlet mapDispatchToProps = {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}