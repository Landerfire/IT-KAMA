{"version":3,"sources":["assets/images/user.png","redux/dialogs-reducer.js","api/api.js","assets/images/preloader.gif","components/Common/Preloader/Preloader.module.scss","components/Users/Users.module.scss","components/Navbar/Navbar.module.scss","components/Common/Paginator/Paginator.module.scss","components/Common/Preloader/Preloader.jsx","serviceWorker.js","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Music/Music.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Settings/Settings.jsx","utils/object-helpers.js","redux/users-reducer.js","components/Common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.jsx","App.js","index.js","components/Common/FormsControls/FormsControls.jsx","components/Common/FormsControls/FormsControls.module.scss","utils/validators/validators.js","components/Header/Header.module.scss","redux/profile-reducer.js"],"names":["module","exports","initialState","messages","id","message","dialogs","name","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","newMessage","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","post","unfollow","delete","profileAPI","getProfile","userId","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","authMe","login","email","password","rememberMe","logout","Preloader","props","src","preloader","className","style","alt","Boolean","window","location","hostname","match","Header","s","header","loginBlock","isAuth","onClick","to","setAuthUserData","payload","getAuthUserData","dispatch","a","resultCode","authReducer","HeaderContainer","this","React","Component","connect","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","formSummaryError","length","stopSubmit","_error","Music","Navbar","nav","item","activeClassName","active","News","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","portionSize","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","count","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","filter","Paginator","totalItemsCount","onPageChanged","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","paginatorWrapper","btnBlock","btn","p","cn","selectedPage","pageNumber","event","User","user","userPhoto","photos","small","disabled","some","Users","key","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getPortionSize","UsersContainer","requestUsers","mapDispatchToProps","bind","totalCount","compose","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","component","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","FormControl","input","meta","touched","children","hasError","styles","formControl","Textarea","restProps","child","placeholder","validators","text","validate","value","maxLengthCreator","maxLength","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","reject","newPost","postId"],"mappings":"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","file":"static/js/main.f5c052e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.960d9c1c.png\";","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        { id: 1, message: \"Hi!\" },\r\n        { id: 2, message: \"How are you?\" },\r\n        { id: 3, message: \"Let's go some shoping\" },\r\n        { id: 4, message: \"Yo\" },\r\n        { id: 5, message: \"Yo\" },\r\n        { id: 6, message: \"Yo\" },\r\n    ],\r\n    dialogs: [\r\n        { id: 1, name: 'Dimych' },\r\n        { id: 2, name: 'Andrey' },\r\n        { id: 3, name: 'Sveta' },\r\n        { id: 4, name: 'Sasha' },\r\n        { id: 5, name: 'Victor' },\r\n        { id: 6, name: 'Valera' },\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            let newMessage = {\r\n                id: 7,\r\n                message: body\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            };\r\n            // stateCopy.messages.push(newMessage);\r\n            // stateCopy.newMessageBody = \"\";\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody });\r\n\r\nexport default dialogsReducer;","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"fd29c760-afd8-46bc-9f14-512944ead313\"},\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return (\r\n            instance\r\n                .get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response => { // промисы\r\n                    return response.data;\r\n                })\r\n        )\r\n    },\r\n    follow(id) {\r\n        return (\r\n            instance\r\n                .post(`follow/` + id)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n\r\n        )\r\n    },\r\n    unfollow(id) {\r\n        return (\r\n            instance\r\n                .delete(`follow/` + id)\r\n                .then(response => {\r\n                    return response.data;\r\n                })\r\n        )\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return (\r\n            instance\r\n                .get(`profile/` + userId)\r\n                .then(response => {\r\n                    return response.data;\r\n                })\r\n        )\r\n    },\r\n    getStatus(userId) {\r\n        return (\r\n            instance\r\n                .get(`profile/status/` + userId)\r\n        )\r\n    },\r\n    updateStatus(status) {\r\n        return (\r\n            instance\r\n                .put(`profile/status`, {status: status})\r\n        )\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': `multipart/form-data`\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile) {\r\n        return (\r\n            instance.put(`profile`, profile)\r\n        )\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return (\r\n            instance\r\n                .get(`auth/me/`)\r\n                .then(response => {\r\n                    return response.data;\r\n                })\r\n        )\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return (\r\n            instance\r\n                .post(`auth/login/`, {email, password, rememberMe})\r\n        )\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/preloader.4ad9c6fe.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__cfS8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__3LRA5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1FO_8\",\"item\":\"Navbar_item__3KdN6\",\"active\":\"Navbar_active__25sQv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__13HQF\",\"paginatorWrapper\":\"Paginator_paginatorWrapper__2FD8_\",\"pages\":\"Paginator_pages__3Vl1m\",\"selectedPage\":\"Paginator_selectedPage__RYM7k\",\"pageNumber\":\"Paginator_pageNumber__38jOw\",\"btnBlock\":\"Paginator_btnBlock__1Cv2Z\",\"btn\":\"Paginator_btn__3hsv3\"};","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.gif';\r\nimport style from './Preloader.module.scss'\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} className={style.preloader} alt=\"Загрузка...\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Header.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://s1.logaster.com/static/v3/img/products/logo.png\" alt=\"logo\" />\r\n\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                    : <NavLink to={`/login`}><span>Login</span></NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\n// THUNKS //\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let data = await authAPI.authMe();\r\n    if (data.resultCode === 0) {\r\n        let {id, email, login} = data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer'\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../Common/FormsControls/FormsControls\";\r\nimport style from '../Common/FormsControls/FormsControls.module.scss';\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Sign In</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    let onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Navbar.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 15,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    portionSize: 10,\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n                // users: state.users.map(u => {  // идентично users: [...state.users]\r\n                //     if (u.id === action.userId) {\r\n                //         return {\r\n                //             ...u,\r\n                //             followed: true\r\n                //         };\r\n                //     }\r\n                //     return u;\r\n                // }),\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n                // users: state.users.map(u => {  // идентично users: [...state.users]\r\n                //     if (u.id === action.userId) {\r\n                //         return {\r\n                //             ...u,\r\n                //             followed: false\r\n                //         };\r\n                //     }\r\n                //     return u;\r\n                // }),\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}  // каждый раз \"перезатирает\" массив новыми данными\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId] // делаем копию массива и добавляем id пользователя в него\r\n                    : [state.followingInProgress.filter(id => id !== action.userId)] // фильтрация. возвращает массив, в котором остаются только те id, которые не равны action.id\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n// ACTION_CREATORS\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage}); // свойство должно совпадать со свойством редюсера\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\n\r\n// THUNKS\r\n\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(currentPage));\r\n\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let data = await apiMethod(userId);\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport style from './Paginator.module.scss';\r\nimport cn from 'classnames';\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize); // округляем значение в большую сторону\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    // let portionSize = useState(10);\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={style.paginator}>\r\n            <div className={style.paginatorWrapper}>\r\n                <div className={style.btnBlock}>\r\n                    {portionNumber > 1 &&\r\n                    <button className={style.btn} onClick={() => {\r\n                        setPortionNumber(portionNumber - 1)\r\n                    }}>PREV</button>}\r\n                </div>\r\n\r\n                <div className={style.pages}>\r\n                    {pages\r\n                        .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                        .map((p) => {\r\n                            return <span\r\n                                className={cn({\r\n                                    [style.selectedPage]: currentPage === p\r\n                                }, style.pageNumber)}// было: className={currentPage === p ? style.selectedPage : null}\r\n                                onClick={(event) => {\r\n                                    onPageChanged(p)\r\n                                }}>{p}</span>\r\n                        })}\r\n                </div>\r\n\r\n                <div className={style.btnBlock}>\r\n                    {portionCount > portionNumber &&\r\n                    <button className={style.btn} onClick={() => {\r\n                        setPortionNumber(portionNumber + 1)\r\n                    }}>NEXT</button>}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport style from './Users.module.scss';\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nlet User = ({user, followingInProgress, follow, unfollow}) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img className={style.userPhoto}\r\n                             src={user.photos.small != null ? user.photos.small : userPhoto} alt=\"\" />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button\r\n                            disabled={followingInProgress.some(id => id === user.id)} // если в массиве хоть один id = user.id, тогда true\r\n                            onClick={() => {\r\n                                unfollow(user.id)\r\n                            }}>Unfollow\r\n                        </button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      follow(user.id)\r\n                                  }}>Follow\r\n                        </button>\r\n                    }\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"user.location.country\"}</div>\r\n                    <div>{\"user.location.city\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nconst Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, portionSize, ...props}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                           totalItemsCount={totalUsersCount} pageSize={pageSize} portionSize={portionSize} />\r\n            </div>\r\n\r\n            <div>\r\n                {\r\n                    users.map(u => <User user={u}\r\n                                         key={u.id}\r\n                                         followingInProgress={props.followingInProgress}\r\n                                         unfollow={props.unfollow} follow={props.follow} />\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const getPortionSize = (state) => {\r\n    return state.usersPage.portionSize;\r\n}\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {\r\n    follow,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleFollowingProgress,\r\n    toggleIsFetching,\r\n    unfollow\r\n} from '../../redux/users-reducer';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport Users from './Users';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getPortionSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() { // монтирование и запрос на сервер\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize); // вызов callback из ThunkCreator\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => { // запрос на сервер при клике на номер страницы\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader /> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       users={this.props.users}\r\n                       follow={this.props.follow}\r\n                       unfollow={this.props.unfollow}\r\n                       followingInProgress={this.props.followingInProgress}\r\n                       toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                       portionSize={this.props.portionSize}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        portionSize: getPortionSize(state),\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n    follow,\r\n    unfollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    toggleIsFetching,\r\n    toggleFollowingProgress,\r\n    requestUsers,\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(UsersContainer)","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\n// THUNKS //\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    await Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        })\r\n}\r\n\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"; // import thunk from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../components/Common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return (\r\n            <Suspense fallback={<div><Preloader /></div>}>\r\n                <Component {...props} />\r\n            </Suspense>\r\n        )\r\n    }\r\n}","import React, {Suspense} from 'react';\r\nimport {connect, Provider} from 'react-redux';\r\nimport {HashRouter, Route, withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\nimport './App.scss';\r\nimport Preloader from './components/Common/Preloader/Preloader';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport LoginPage from './components/Login/Login';\r\nimport Music from './components/Music/Music';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from './components/News/News';\r\nimport Settings from './components/Settings/Settings';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport {initializeApp} from './redux/app-reducer';\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import((`./components/Dialogs/DialogsContainer`)));\r\nconst ProfileContainer = React.lazy(() => import((`./components/Profile/ProfileContainer`)));\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader />\r\n        }\r\n\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer />\r\n                <Navbar />\r\n                <div className=\"app-wrapper__content\">\r\n                    <Suspense fallback={<div><Preloader /></div>}>\r\n                        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\r\n                    </Suspense>\r\n                    <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)} />\r\n                    <Route path=\"/news\" render={withSuspense(News)} />\r\n                    <Route path=\"/music\" component={Music} />\r\n                    <Route path=\"/settings\" component={Settings} />\r\n                    <Route path=\"/users\" render={() => <UsersContainer />} />\r\n                    <Suspense fallback={<div><Preloader /></div>}>\r\n                        <Route path=\"/login\" render={() => <LoginPage />} />\r\n                    </Suspense>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized,\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp})\r\n)(App);\r\n\r\nconst SamuraiJSApp = () => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer />\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <SamuraiJSApp />, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport styles from './FormsControls.module.scss';\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators} component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1AtJh\",\"error\":\"FormsControls_error__1uZdV\",\"formSummaryError\":\"FormsControls_formSummaryError__1D-Ld\"};","export const required = (value) => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__Ra-b_\",\"loginBlock\":\"Header_loginBlock__ULrkm\"};","import {profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_STATUS = 'SET-STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are you?\", likesCount: 15},\r\n        {id: 2, message: \"It's my first post\", likesCount: 9},\r\n        {id: 3, message: \"Do u know da way?\", likesCount: 1},\r\n        {id: 4, message: \"Get over here!\", likesCount: 99},\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            debugger\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// ACTION CREATORS //\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\n// если функция возвращает лишь одну строку, мы можем убрать return и фигурные скобки, но нужно обернуть объект в круглые скобки\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\n// THUNKS //\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    let response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;"],"sourceRoot":""}