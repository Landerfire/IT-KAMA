{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","to","activeClassName","active","name","Message","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","action","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogs__items","values","console","log","newMessageBody","sendMessage","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCaxMC,EAVI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,QACd,kBAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAEI,QAASR,EAAMS,QCFlDC,EAJC,SAACV,GACb,OAAO,yBAAKG,UAAWC,IAAEO,SAAUX,EAAMW,U,iCCgCvCC,EAAeC,YAAiB,KAYhCC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAVL,SAACf,GACpB,OACI,0BAAMiB,OAAO,GAAGC,SAAUlB,EAAMmB,cAC5B,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUb,KAAM,iBAAkBc,YAAa,oBAAqBC,SAAU,CAACC,IAAUb,MAE/G,6BAAK,6CAMFc,EAzCC,SAAC1B,GAEb,IAAI2B,EAAQ3B,EAAM4B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAMwB,IAAKD,EAAE9B,GAAIA,GAAI8B,EAAE9B,QACpFgC,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASzB,QAASyB,EAAEzB,QAASsB,IAAKG,EAAElC,QAOnF,OACI,yBAAKC,UAAWC,IAAE0B,SACd,yBAAK3B,UAAWC,IAAEiC,gBACbR,GAEL,yBAAK1B,UAAWC,IAAE+B,UACd,6BAAMD,GACN,6BACI,kBAACpB,EAAD,CAAqBI,SAbjB,SAACoB,GACjBC,QAAQC,IAAIF,EAAOG,gBACnBzC,EAAM0C,YAAYJ,EAAOG,uB,wDCd7BE,EAA6B,SAAChB,GAAD,MAAY,CACzCiB,OAAQjB,EAAMkB,KAAKD,S,OCeRE,sBACXC,aAfkB,SAACpB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACoB,GACtB,MAAO,CACHN,YAAa,SAACD,GACVO,EAASC,YAAmBR,UDPR,SAACS,GAAe,IAEtCC,EAFqC,iLAInC,OAAKC,KAAKpD,MAAM4C,OAET,kBAACM,EAAcE,KAAKpD,OAFI,kBAAC,IAAD,CAAUM,GAAI,eAJV,GAEX+C,IAAMH,WAUtC,OAFqCH,YAAQJ,EAARI,CAAoCI,KCE9DL,CAGbpB","file":"static/js/4.26fa5d5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1LFbr\",\"dialogs__items\":\"Dialogs_dialogs__items__1Cli6\",\"dialog\":\"Dialogs_dialog__1-nO0\",\"active\":\"Dialogs_active__30aPP\",\"messages\":\"Dialogs_messages__1ShEK\",\"message\":\"Dialogs_message__36Zkk\"};","import React from 'react';\r\nimport s from '../Dialogs.module.scss'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from '../Dialogs.module.scss'\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.scss'\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\nimport { Textarea } from '../Common/FormsControls/FormsControls';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />)\r\n\r\n    let addNewMessage = (values) => {\r\n        console.log(values.newMessageBody);\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs__items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form action=\"\" onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newMessageBody\"} placeholder={\"Enter yor message\"} validate={[required, maxLength100]} />\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n            return <Component {...this.props} /> // {...props} - деструктуризация пропсов\r\n        }\r\n    }\r\n  \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => { // для данных из state. Уже сразу state = getState();\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}